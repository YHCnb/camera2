在将数据存储到Bitmap之前，如果源数据是RGBA格式，而目标Bitmap是ARGB格式，确实会导致颜色错误。要解决这个问题，可以在创建Bitmap之后，将源数据中的RGBA颜色转换为ARGB格式。

可以尝试使用以下代码来实现颜色转换：

```kotlin
// 创建一个临时的Bitmap对象
val bitmap = Bitmap.createBitmap(snapWidth, snapHeight, Bitmap.Config.ARGB_8888)

// 将GL读取的像素数据(buf)写入bitmap中
bitmap.copyPixelsFromBuffer(buf)

// 获取bitmap像素数组
val pixels = IntArray(size)
bitmap.getPixels(pixels, 0, snapWidth, 0, 0, snapWidth, snapHeight)

// 将RGBA格式的颜色转换为ARGB格式
for (i in pixels.indices) {
    // 获取原始颜色
    val originalColor = pixels[i]

    // 将RGBA颜色转换为ARGB颜色
    val argbColor = (originalColor and 0xff00ff00.toInt()) or
                   ((originalColor and 0xff0000) shr 16) or
                   ((originalColor and 0xff) shl 16)

    // 更新像素数组中的颜色值
    pixels[i] = argbColor
}

// 将更新后的像素数组重新写入bitmap中
bitmap.setPixels(pixels, 0, snapWidth, 0, 0, snapWidth, snapHeight)
```

通过上述代码，你可以将原始的RGBA格式的像素数据转换为ARGB格式，并将其存储到bitmap中，确保后续处理的颜色是正确的。